import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# Load the movie dataset
df = pd.read_csv('movies.csv')  # Replace 'movies.csv' with your dataset's filename

# Data Cleaning
print("First few rows of the dataset:")
print(df.head())
print("\nMissing values in each column:")
print(df.isnull().sum())
df.dropna(subset=['rating'], inplace=True)  # Drop rows with missing ratings
df['release_year'] = pd.to_datetime(df['release_date']).dt.year  # Convert release date to year

# Exploratory Data Analysis (EDA)
plt.figure(figsize=(10, 6))
sns.histplot(df['rating'], bins=20, kde=True)
plt.title('Distribution of Movie Ratings')
plt.xlabel('Rating')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(12, 6))
sns.boxplot(x='genre', y='rating', data=df)  # Change 'genre' to your actual genre column name
plt.title('Ratings by Genre')
plt.xticks(rotation=45)
plt.show()

# Feature Selection
features = df[['release_year', 'duration', 'budget']]  # Add other relevant features as needed
target = df['rating']

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Build and Train the Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Model Evaluation
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Absolute Error: {mae}')
print(f'R-squared: {r2}')

# Insights
importance = model.feature_importances_
feature_importance_df = pd.DataFrame({'Feature': features.columns, 'Importance': importance})
feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)

plt.figure(figsize=(10, 6))
sns.barplot(x='Importance', y='Feature', data=feature_importance_df)
plt.title('Feature Importance')
plt.show()
